# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Python CI

on: [push]

jobs:
  docker-lint:
    name: Hadolint Dockerfile
    runs-on: macOS-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2

      - name: Run hadolint
        run: |
          brew install hadolint
          hadolint ./Dockerfile | tee -a hadolint_lint.txt
          lintErrors=$(stat -f%z hadolint_lint.txt)
          if [ "$lintErrors" -gt "0" ]; then
              echo "Errors have been found, please see below"
              cat hadolint_lint.txt
              exit 1
          else
              echo "No erros found on Dockerfile!!"
          fi

  python-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run linting
        run: |
          make install
          make lint

  python-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run test
        run: |
          make install
          make test
          make coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 5

  train-test:
    name: Train and report
    # needs: [docker-lint, python-lint, python-test]
    runs-on: [ubuntu-latest]
    container: docker://dvcorg/cml-py3:latest

    steps:
      - uses: actions/checkout@v2

      - name: pull data
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        with:
          args: dvc pull data --run-cach

      - name: cml_run
        shell: bash
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # run-cache from GS and reproduce pipeline
          dvc repro

          # Report metrics
          echo "## Metrics" >> report.md
          git fetch --prune
          dvc metrics diff main --show-md >> report.md

          # Publish confusion matrix diff
          echo -e "## Plots\n### Class confusions" >> report.md
          dvc plots diff --target ml/output/divorce/classes.csv --template confusion -x actual -y predicted --show-vega main > vega.json
          vl2png vega.json -s 1.5 | cml-publish --md >> report.md

          cml-send-comment report.md

  # setup-build-publish:
  #   name: Setup, Build, Publish
  #   needs: [docker-lint, python-lint, python-test]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Push to GitHub Packages
  #       uses: docker/build-push-action@v1
  #       with:
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #         registry: docker.pkg.github.com
  #         repository: ${{ github.repository }}/divorce-trainer
  #         tag_with_sha: true
